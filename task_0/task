Здесь я расскажу тебе о gradle.
Gradle это система сборки, которую придумали для унификации. Поясняю в рамках системы сборки gradle все файлы, а именно
файлы с кодом, с тестами и конфигурационные файлы находятся в определенных местах, предусмотренных сиситемой сборки,
таким образом проект можно передать на любой компьютер, собрать там и запустить (раньше все хранили файлы как им
вздумается) это удабно при совместной работе с системой контроля версий (например git).

Что в себя включает gradle?
Справа ты видишь вкладку Gradle с рисунком слона если нажать на нее, выскочат разные таски, которые умеет gradle, но
туда заходить обычно не нужно, это так для справки. Слева есть основной файл build.gradle со всеми основными настройками
проекта. В нем прописаны используемые плагины в нашем случае джава, также версия собираемого артефакта, d в нашем случае
джарника (это ты увидишь позже), далее указаны репозитории, из которых gradle тянет зависимости (maven - предок gradle
первым ввел унификацию), дальше собственно зависимости, если тебе нужно добавить в проект стороннюю библиотеку в
интернете можно найти какую строчку добавить в зависимость для gradle (но это скорее всего не понадобится), дальше идет
платформа используемая для тестов (кстати если тебе дадут доп на написание юнит тетстов, могу показать как их писать,
это не сложно) и наконец последнее это таска jar, которой у тебя по дефолту нет, так что скопируй из этого проекта, она
позволяет удобно собирать джарник без мманифеста, так как он зашит в эту таску (в Main-class нужно прописать путь к
твоему классу Main и тогда все заработает)
Также есть gradlew он нужен, чтобы ты мог собирать проект из терминала (или на сервере), в gradlew.bat видимо прописаны
настройки для gradlew (эти два файла нам особо не интересны).
В settings.gradle обычно прописывают используемые модули и зависимости между ними он понадобится в шестой лабе.
И сверху папка gradle в ней джарник от грэдла, то есть сам грэдл, остальные папки не особо интересны.

Как пользоваться gradle?
При запуске проекта можешь конечно просто по старинке запускать current file через кнопку справа наверху, но
информативнее по другому (а еще тебе пригодится другой способ для сборки и запуска джарника на сервере).
Сначала немного о терминальных командах.
Команда cd (путь) переместит тебя в папку(директорию) по указанному пути
Команда ls покажет, что находится в текущей директории
Открой терминал (плашка внизу)
Набери команду ls. Видишь папку .idea? С помощью команды ls .idea, можешь посмотреть, что в нец находится, но это не
переместит тебя в эту папку, набери cd .idea, теперь ты в папке .idea и с помощью простого ls можешь посмотреть, что в
ней находится, но как выбраться обратно? набери cd .. Две точки указывают на родительскую директорию.
Теперь о том как собирать джарник и запускать программу, находясь в корне своего проекта (он открывается по умолчанию,
когда открываешь терминал) набери ./gradlew build эта команда соберет твой проект, теперь набери ./gradlew jar, так как
ты прописал таску jar это соберет джарник, теперь вопрос где собрался джарник. Он находится по пути build\libs
То есть набери cd build\libs, теперь набери ls и увидишь джарник, чтобы его запустить набери java -jar название джарника
название длинное, поэтому начни набирать, и нажми tab, это автозаполнение (кстати заметил, что в названии джарника
отражена версия, прописанная в build.gradle?).
Теперь ты знаешь как запускать проект через терминал, а в последствии на сервере, переходи к заданию 1!
P.S. Теперь ты можешь собрать готовый вариант программы и посмотреть как это будет в итоге выглядеть (даже собирать не надо, джарник
уже собран) используй команду "java - jar название джарника data.csv"